---
  - name: allbus | copy_tarball.yml | register deploy from tarball path
    command: echo "/tmp/{{ ad_release_version }}.tar.gz"
    register: ad_deploy_from_tarball_path

  - name: allbus | copy_tarball.yml | create tarball locally
    local_action: command tar -cvzf "{{ ad_deploy_from_tarball_path.stdout }}" -C "{{ ad_deploy_from }}" .
    sudo: no

  - name: allbus | copy_tarball.yml | register deploy to tarball directory
    command: echo "/tmp/{{ ad_release_version }}"
    register: ad_deploy_to_tarball_directory

  - name: allbus | copy_tarball.yml | ensure deploy to tarball directory
    file: state=directory path="{{ ad_deploy_to_tarball_directory.stdout }}"

  - name: allbus | copy_tarball.yml | copy and unarchive tarball to deploy tarball directory
    unarchive: src="{{ ad_deploy_from_tarball_path.stdout }}" dest="{{ ad_deploy_to_tarball_directory.stdout }}"

  - name: allbus | copy_tarball.yml | move unarchived tarball to release path
    shell: >
      mv {{ ad_deploy_to_tarball_directory.stdout | quote }}/{.[!.],}* {{ ad_release_path.stdout | quote }}
    args:
      executable: /bin/bash

  - name: allbus | copy_tarball.yml | clean local tarball
    local_action: file path={{ ad_deploy_from_tarball_path.stdout }} state=absent
    sudo: no

  - name: allbus | copy_tarball.yml | clean deploy tarball directory
    file: path={{ ad_deploy_to_tarball_directory.stdout }} state=absent
